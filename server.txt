const express = require('express');
const sqlite3 = require('sqlite3');
const cors = require('cors');
const path = require('path');

const app = express();

app.use(cors());
app.use(express.json());

const conexao = new sqlite3.Database('seu_banco_de_dados.db');

conexao.serialize(() => {
   conexao.run(`
      CREATE TABLE IF NOT EXISTS
      usuarios (
         id INTEGER PRIMARY KEY AUTOINCREMENT,
         nome TEXT,
         email TEXT
      )
   `);
});

app.post('/usuarios', (req, res) => {
   const { nome, telefone, dataNascimento, idade, endereco, email } = req.body;

   if (!nome || !telefone || !dataNascimento || !idade || !endereco ||
      nome.length < 2 || telefone.length < 2 || idade < 0) {
      return res.status(400).json({ success: false, message: 'Preencha todos os campos corretamente' });
   }

   conexao.run('INSERT INTO usuarios (nome, telefone, dataNascimento, idade, endereco, email) VALUES (?, ?, ?, ?, ?, ?)', [nome, telefone, dataNascimento, idade, endereco, email], (err) => {
      if (err) {
         console.error('Erro ao inserir no SQLite:', err);
         return res.status(500).json({ success: false, message: 'Erro interno do servidor' });
      }
      res.json({ success: true, message: 'Usuário cadastrado com sucesso' });
   });
});

// Rota para redirecionar o acesso à raiz para 'formulário.html'
app.get('/', (req, res) => {
   res.sendFile(path.join(__dirname, 'formulário.html'));
});

app.listen(3000, () => {
   console.log('Servidor rodando na porta 3000...');
});